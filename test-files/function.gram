S entry '\n' | S entry '\n'
entry ws line comment | func
line exp | stat | call | print | return
stat svar ws '=' ws exp
var name
svar name
binop binopa
exp binopa | binopb | number | var
expb binopb | number | var
binopa plus | minus
binopb times | divide
plus exp ws '\+' ws exp
minus exp ws '-' ws exp
times expb ws '\*' ws expb
divide expb ws '\/' ws expb
name '[[:alpha:]]+'
number '[[:digit:]]+'
ws '[ \t]*'
func 'func' ws name '\(' args '\)' '\n' block
args name | name ',' ws args
print 'print' '\(' exp '\)'
return 'return' ws exp
comment '' | ws '\/\/' '[^\/\n]*'
cmp less | more | equals
less exp ws '<' ws exp
more exp ws '>' ws exp
equals exp ws '==' ws exp
block '{\n' S '}'
call name '\(' args '\)'
