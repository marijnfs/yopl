S entries
entries entryln | entryln entries
entryln ws entry optcom '\n'
optcom comment | nocomment
nocomment ''
comment ws '#' comstr:'[^\n]*'
entry classdef | functiondef | block | line | comment | branch | flow | continue | empty:''
block '\[\n' entries '\]' optcom '\n'
classdef '\[' name '\]\n' clentries
#line stat | ret | alloc | inc | dec | vardef
line stat | ret | alloc | inc | dec
alloc varname '\[' value '\]'
name '[_[:alpha:]]+'
basetypename 'i64' | 'i32' | 'i16' | 'f64' | 'f32' | 'c'
type basetype | classtype
classtype name ptr
basetype basetypename ptr
ptr '\*' | noptr
noptr ''
vardef type rws name
ret 'ret' rws loadvar
loadvar varname
rws '[ \t]+'
ws '[ \t]*'
clentries clentry | clentry clentries
clentry vardef '\n'
functiondef items rws '->' rws name rws '->' rws items '\n' entries ']'
items item | item ',' rws items
item name | vardef
varname indexname '\.' varname | indexname
indexname name | int | '\(' value '\)'
stat varname rws '=' rws value
value flow | number | arraysize | exp
number int | float
int '[[:digit:]]+'
float  real:'[[:digit:]]+' '\.' frac:'[[:digit:]]+'
arraysize varname '\[\]'
exp binop | expb | inc | dec | loadvar
inc loadvar '\+\+'
dec loadvar '\-\-'
binop plus | min | times | divide
plus exp rws '\+' rws exp
min exp rws '-' rws exp
times expb rws '\*' rws expb
divide expb rws '\/' rws expb
expb number | loadvar | '\(' exp '\)'
cmpstat cmp | expcomma rws cmp
expcomma line | line ',' rws expcomma
cmp less | more | eq | noteq
less value rws '<' rws value
more value rws '>' rws value
lesseq value rws '<=' rws value
moreeq value rws '>=' rws value
eq value rws '==' rws value
noteq value rws '!=' rws value
branch cmpstat rws '\?' '\n' branchblocks
branchblocks branchfinal | branchblock branchblocks
branchblock entries ws optjmp '\|' '\n'
branchfinal entries ws optjmp '\]'
optjmp jmp | nojmp
jmp '\^'
nojmp ''
flow sources | flow rws '\>' rws nodes
nodes node | nodes rws node
sources source | sources rws source
source '\(' exp '\)' | number | node | loadvar | str
node name | '\(' flow '\)'
str '\"' content:'[^\"]*' '\"' | "\'" content:"[^\']*" "\'"
continue '>' | continue '>'
